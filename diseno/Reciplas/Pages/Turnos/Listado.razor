@page "/turnos/listado"
@using Reciplas.Models;
@inject NotificationService NotificationService 
@inherits OwningComponentBase<Turno>
@using System.Collections.Generic;  
@using Reciplas.Repository
@inject DialogService DialogService   
@inject NavigationManager NavigationManager
@inject IClienteRepository _clientRepository 
@using Radzen
@inject TooltipService tooltipService


<PageTitle>Turno</PageTitle>

<TituloPrincipal TextoPrincipal="Turnos"/>   <br>
 
<RadzenButton Click=@(args => OnClick("Oblea Descargada")) Variant="Variant.Flat" Shade="Shade.Dark"  Text="Excel" Icon="assignment_returned" ButtonStyle="ButtonStyle.Success"/>

<br>
<br>
<CListado TItem="Models.Turno" Data="@turnos" PageSize="5" Frozen="true">
       <Columns> 
        <RadzenDataGridColumn TItem=" Models.Turno" Property="Número" Title="Número" Width="80px" />
        <RadzenDataGridColumn TItem=" Models.Turno" Property="Cliente" Title="Cliente" Width="80px" />
        <RadzenDataGridColumn TItem=" Models.Turno" Property="Estado" Title="Estado" Width="50px" /> @* realizado/norealizado *@
        <RadzenDataGridColumn TItem=" Models.Turno" Property="Hora" Title="Hora" Width="50px" />
        <RadzenDataGridColumn TItem=" Models.Turno" Property="Fecha" FormatString="{0:d}" Title="Fecha" Width="90px" />
        <RadzenDataGridColumn TItem=" Models.Turno" Title="Acciones" Width="50px" Context="clientes" Filterable="false" Sortable="false">

            <Template Context="item">
                <RadzenTooltip Text="Nuevo">
                    <RadzenButton Click="@(args => NavigationManager.NavigateTo("/turnos/detalles/{item.Id}"))" TextAlign="TextAlign.Center" Icon="list" ButtonStyle="ButtonStyle.Success" Style="margin-left: 5px" />
                </RadzenTooltip>
                <RadzenButton Style="margin-left: 15px" Variant="Variant.Outlined" Click="@(args => NavigationManager.NavigateTo($"/turnos/editar/{item.Id}"))" Icon="list" />
                </Template>
            </RadzenDataGridColumn> 
        
    </Columns>  
</CListado> 
<br> 
<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem" Wrap="FlexWrap.Wrap">
   <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Ventas/NuevoClienteFormulario"))" Variant="Variant.Flat"  Text="Nuevo" Icon="add_circle_outline" ButtonStyle="ButtonStyle.Secondary" />
</RadzenStack>
<br> 

@code {
    IEnumerable<Models.Turno> turnos;   
    Models.Turno turno = new();
    protected bool cargando = true;    
    bool value;

    // [Parameter] public bool SoloLectura { get; set; } = true;
    // [Parameter] public string Nombre {get; set;}
    // [Parameter] public string Direccion {get; set;}
    // [Parameter] public int DNI {get; set;} 
    // [Parameter] public int Telefono {get; set;}  


    bool EmployeeIDVisible = false; 

    private void OnClick(string text)
    {
        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Detail = text });
    }
    protected async Task QuitarAdjunto(int Id)
    {
    //
    }
    private int _count;
    protected override async Task OnInitializedAsync()
    {
        var persons = await _clientRepository.GetTurnos();

        turnos = persons;
        _count = persons.Count();

       await base.OnInitializedAsync();

    }

 

}

