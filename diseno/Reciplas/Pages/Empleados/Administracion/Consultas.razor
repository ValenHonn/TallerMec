@page "/Empleados/Administracion/Consultas"
@using Reciplas.Models;
@inject NotificationService NotificationService 
@inject NavigationManager NavigationManager
@inherits OwningComponentBase<Usuario> 
@inject IModalService modal 
@inject DialogService DialogService 
   
<TituloPrincipal TextoPrincipal="Administracion" TextoSecundario="Consultas" /> 
<div class="rz-p-12">
    <RadzenColumn Size="12" SizeMD="6">
    <RadzenAccordion>
        <Items>
            <RadzenAccordionItem Text="Consultas" Icon="account_balance_wallet">
                
                    <RadzenTabs TabPosition="@tabPosition" RenderMode="TabRenderMode.Client" >
                        <Tabs>
                            <RadzenTabsItem Text="Compras">
                                <RadzenDataList PageSize="6" WrapItems="true" AllowPaging="true" Data="@orders" TItem="Order">
                                    <Template Context="order">
                                        <RadzenCard Style="width: 250px;" Class="rz-border-radius-3">
                                            <RadzenRow Gap="0.5rem">
                                                <RadzenColumn Size="8" Class="rz-text-truncate">
                                                    <RadzenBadge BadgeStyle="BadgeStyle.Light" Text=@($"{order.OrderID}") Class="rz-mr-1" IsPill="true" />
                                                    <RadzenText TextStyle="TextStyle.Caption" Class="rz-mb-0">@(order.ShipName)</RadzenText>
                                                </RadzenColumn>
                                                <RadzenColumn Size="4" Class="rz-text-align-right">
                                                    <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Text=@($"{order.Freight}") Class="rz-mr-1" IsPill="true"/>
                                                </RadzenColumn>
                                            </RadzenRow>
                                            <hr style="border: none; background-color: rgba(0,0,0,.08); height: 1px; margin: 1rem 0;" />
                                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem">
                                                <RadzenStack Gap="0">
                                                    
                                                    <RadzenText TextStyle="TextStyle.Body2" Class="rz-mb-0">@order.ShipAddress</RadzenText>
                                                    <RadzenText TextStyle="TextStyle.Caption" Class="rz-mb-0">@(order.ShipCity)</RadzenText>
                                                </RadzenStack>
                                            </RadzenStack>
                                        </RadzenCard>
                                    </Template>

                                </RadzenDataList>   
                                <RadzenButton Style="margin-left:auto" Click=@(args => OnClick("Excel Descargado")) Variant="Variant.Outlined" Text="Excel" Icon="assignment_returned" ButtonStyle="ButtonStyle.Success"/>

                            </RadzenTabsItem>
                            <RadzenTabsItem Text="Ventas">
                                <RadzenDataList PageSize="6" WrapItems="true" AllowPaging="true" Data="@pedidos" TItem="Pedidos">
                                    <Template Context="order">
                                        <RadzenCard Style="width: 250px;" Class="rz-border-radius-3">
                                            <RadzenRow Gap="0.5rem">
                                                <RadzenColumn Size="8" Class="rz-text-truncate">
                                                    <RadzenBadge BadgeStyle="BadgeStyle.Light" Text=@($" N° de pedido: {order.NumPedido}") Class="rz-mr-1" IsPill="true" />
                                                </RadzenColumn>
                                                <RadzenColumn Size="4" Class="rz-text-align-right">
                                                    <RadzenText TextStyle="TextStyle.Caption" Class="rz-mb-0">ID Empleado</RadzenText>

                                                    <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Shade="Shade.Lighter" Text=@($"{order.IDEmpleado}") IsPill="true" />
                                                </RadzenColumn>
                                            </RadzenRow>
                                            <hr style="border: none; background-color: rgba(0,0,0,.08); height: 1px; margin: 1rem 0;" />
                                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem">
                                                <RadzenStack Gap="0">
                                                    <RadzenText TextStyle="TextStyle.Body1" Class="rz-mb-0">Pedido: @order.Ped</RadzenText>
                                                    <RadzenText TextStyle="TextStyle.Caption" Class="rz-mb-0">Fecha de Venta: @order.Fecha</RadzenText> 
                                                    <RadzenText TextStyle="TextStyle.Caption" Class="rz-mb-0">Codigo de Venta: @order.CodVenta</RadzenText> 
                                                    <RadzenText TextStyle="TextStyle.Caption" Class="rz-mb-0">@(order.Descripcion)</RadzenText>
                                                </RadzenStack>
                                            </RadzenStack>
                                        </RadzenCard>
                                    </Template>
                                </RadzenDataList>
                                <RadzenButton Style="margin-left:auto" Click=@(args => OnClick("Excel Descargado")) Variant="Variant.Outlined" Text="Excel" Icon="assignment_returned" ButtonStyle="ButtonStyle.Success"/>

                            </RadzenTabsItem> 
                             <RadzenTabsItem Text="Deudores">
                                <RadzenDataList PageSize="6" WrapItems="true" AllowPaging="true" Data="@reportes" TItem="Reporte">
                                    <Template Context="order">
                                        <RadzenCard Style="width: 250px;" Class="rz-border-radius-3">
                                            <RadzenRow Gap="0.5rem">
                                                <RadzenColumn Size="8" Class="rz-text-truncate">
                                                    <RadzenBadge BadgeStyle="BadgeStyle.Light" Text=@($" IDCliente: {order.ID}") Class="rz-mr-1" IsPill="true" /> <br>
                                                    <RadzenText TextStyle="TextStyle.Caption" Class="rz-mb-0"> DNI: @(order.dni)</RadzenText>
                                                </RadzenColumn> 
                                            </RadzenRow>
                                            <hr style="border: none; background-color: rgba(0,0,0,.08); height: 1px; margin: 1rem 0;" />
                                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem">
                                                <RadzenStack Gap="0">
                                                    <RadzenText TextStyle="TextStyle.Body2" Class="rz-mb-0">@order.nya</RadzenText>
                                                    <RadzenText TextStyle="TextStyle.Body2" Class="rz-mb-0">@order.Direccion</RadzenText>
                                                    <RadzenText TextStyle="TextStyle.Body2" Class="rz-mb-0">@order.Telefono</RadzenText>
                                                    <RadzenText TextStyle="TextStyle.Body2" Class="rz-mb-0">@order.Notas</RadzenText>
                                                    <RadzenText TextStyle="TextStyle.Caption" Class="rz-mb-0">@(order.Ciudad)</RadzenText>
                                                    <RadzenText TextStyle="TextStyle.Caption" Class="rz-mb-0">@(order.Descripcion)</RadzenText>
                                                </RadzenStack>
                                            </RadzenStack>
                                        </RadzenCard>
                                    </Template>
                                </RadzenDataList>
                                <RadzenButton Style="margin-left:auto" Click=@(args => OnClick("Excel Descargado")) Variant="Variant.Outlined" Text="Excel" Icon="assignment_returned" ButtonStyle="ButtonStyle.Success"/>

                            </RadzenTabsItem>
                        </Tabs>
                    </RadzenTabs>
            </RadzenAccordionItem>
            <RadzenAccordionItem Text="Reportes" Icon="account_box">
                <RadzenTabs TabPosition="@tabPosition" RenderMode="TabRenderMode.Client" >
                        <Tabs>
                            <RadzenTabsItem Text="Clientes">
                                <RadzenDataGrid ColumnWidth="150px" AllowPaging="true" PageSize="5" AllowSorting="true" Data="@orders" TItem="Order" AllowColumnResize="true" AllowAlternatingRows="false" Frozen="true" >
                                    <Columns> 
                                        <RadzenDataGridColumn TItem="Order" Property="OrderID" Title="N° de Orden" Width="100px" Frozen="true"/>
                                        <RadzenDataGridColumn TItem="Order" Property="ShipName" Title="Pedido" Width="100px"/>  
                                        <RadzenDataGridColumn TItem="Order" Property="ShipAddress" Title="Descripcion" Width="180px"/>
                                        <RadzenDataGridColumn TItem="Order" Property="ShipCity" Title="Detalles" Width="150px" />
                                        <RadzenDataGridColumn TItem="Order" Property="Freight" Title="Falta enviar" Width="100px"/>
                                    </Columns>
                                </RadzenDataGrid>                                                    
                                <RadzenButton Class="float-end" Click=@(args => OnClick("Excel Descargado")) Variant="Variant.Outlined" Text="Excel" Icon="assignment_returned" ButtonStyle="ButtonStyle.Success"/>

                            </RadzenTabsItem> 
                            <RadzenTabsItem Text="Ventas">
                                <RadzenDataGrid ColumnWidth="150px" AllowPaging="true" PageSize="5" AllowSorting="true" Data="@pedidos" TItem="Pedidos" AllowColumnResize="true" AllowAlternatingRows="false" Frozen="true" >
                                    <Columns> 
                                        <RadzenDataGridColumn TItem="Pedidos" Property="NumPedido" Title="N° de Pedido" Frozen="true"/> 
                                        <RadzenDataGridColumn TItem="Pedidos" Property="Descripcion" Title="Descripcion" />
                                        <RadzenDataGridColumn TItem="Pedidos" Property="IDEmpleado" Title="ID Empleado" />
                                        <RadzenDataGridColumn TItem="Pedidos" Property="CodVenta" Title="Cod de Venta" />
                                        <RadzenDataGridColumn TItem="Pedidos" Property="Fecha" Title="Fecha" FormatString="{0:d}"/>
                                    </Columns>
                                </RadzenDataGrid>
                                <RadzenButton Class="float-end" Click=@(args => OnClick("Excel Descargado")) Variant="Variant.Outlined" Text="Excel" Icon="assignment_returned" ButtonStyle="ButtonStyle.Success"/>

                            </RadzenTabsItem> 
                                <RadzenTabsItem Text="Deudores">
                                    <RadzenDataGrid ColumnWidth="150px" AllowPaging="true" AllowSorting="true" PageSize="5" Data="@reportes" TItem="Reporte" AllowColumnResize="true" AllowAlternatingRows="false" Frozen="true">
                                        <Columns> 
                                            <RadzenDataGridColumn TItem="Reporte" Property="ID" Title="ID" Width="55px" Frozen="true"/> 
                                            <RadzenDataGridColumn TItem="Reporte" Property="nya" Title="Nombre y Apellido" Width="150px"/>
                                            <RadzenDataGridColumn TItem="Reporte" Property="dni" Title="DNI" Width="90px"/>
                                            <RadzenDataGridColumn TItem="Reporte" Property="Telefono" Title="Telefono"  Width="90px"/>
                                            <RadzenDataGridColumn TItem="Reporte" Property="Direccion" Title="Direccion" Width="130px"/> 
                                            <RadzenDataGridColumn TItem="Reporte" Property="Notas" Title="Notas" Width="150px"/>
                                            <RadzenDataGridColumn TItem="Reporte" Property="TotalDebe" Title="Debe" Width="100px" FormatString="{0:c}"/>
                                            <RadzenDataGridColumn TItem="Reporte" Property="TotalPagado" Title="Total Pagado" Width="120px" FormatString="{0:c}"/>
                                        </Columns>
                                    </RadzenDataGrid> 
                                <RadzenButton Class="float-end" Click=@(args => OnClick("Excel Descargado")) Variant="Variant.Outlined" Text="Excel" Icon="assignment_returned" ButtonStyle="ButtonStyle.Success"/>

                                </RadzenTabsItem>     
                                
                        </Tabs>
                    </RadzenTabs>

            </RadzenAccordionItem>
            <RadzenAccordionItem Text="Stock" Icon="accessibility">
                 <RadzenText Style="margin-left: 15px" TextStyle="TextStyle.Body1" Class="rz-mb-0" >Direccionando al Área de Producción </RadzenText> <br> 
                <RadzenButton Class="float-end" Click=@(args => OnClick("Excel Descargado")) Variant="Variant.Outlined" Text="Excel" Icon="assignment_returned" ButtonStyle="ButtonStyle.Success"/>

                 <RadzenText Style="margin-left: 15px; padding:15px" TextStyle="TextStyle.Body1" Class="rz-mb-0" >Stock de Materia Prima</RadzenText>  
                <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Produccion/NuevoStockPrimaFormulario"))" Variant="Variant.Flat" Shade="Shade.Lighter" Text="Nuevo" Icon="add_circle_outline" ButtonStyle="ButtonStyle.Secondary" Style="margin-left: 30px"/>
                    <br>
                 <RadzenText Style="margin-left: 15px; padding:15px" TextStyle="TextStyle.Body1" Class="rz-mb-0" >Productos Fabricados</RadzenText> 
                <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Produccion/NuevoStockFabricadosFormulario"))" Variant="Variant.Flat" Shade="Shade.Lighter" Text="Nuevo" Icon="add_circle_outline" ButtonStyle="ButtonStyle.Secondary" Style="margin-left: 30px"/>
                <RadzenButton Class="float-end" Click=@ShowInlineDialogProduccion Variant="Variant.Outlined" Text="Area Producción" Icon="assignment" ButtonStyle="ButtonStyle.Secondary"  />
            </RadzenAccordionItem>

            <RadzenAccordionItem Text="Usuario" Icon="accessibility">
                <RadzenText Style="margin-left: 15px" TextStyle="TextStyle.Body1" Class="rz-mb-0" >Direccionando al Área de Ventas </RadzenText> <br>
                <RadzenButton Class="float-end" Click=@(args => OnClick("Excel Descargado")) Variant="Variant.Outlined" Text="Excel" Icon="assignment_returned" ButtonStyle="ButtonStyle.Success"/>


                <RadzenText Style="margin-left: 15px; padding:15px" TextStyle="TextStyle.Body1" Class="rz-mb-0" >Usuarios</RadzenText>  

                <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Ventas/NuevoClienteFormulario"))" Variant="Variant.Flat" Shade="Shade.Lighter" Text="Nuevo" Icon="add_circle_outline" ButtonStyle="ButtonStyle.Secondary" Style="margin-left: 30px"/>
                <RadzenButton Class="float-end" Click=@ShowInlineDialog Variant="Variant.Outlined" Text="Area Ventas" Icon="assignment" ButtonStyle="ButtonStyle.Info"  />
            </RadzenAccordionItem>
        </Items>
    </RadzenAccordion></RadzenColumn>
</div>

 

@code { 
    IEnumerable<Order> orders;
    IEnumerable<Pedidos> pedidos; 
    IEnumerable<Reporte> reportes; 
    TabPosition tabPosition = TabPosition.Top; 
      DateTime? Fecha = DateTime.Now;
     private int _count;
    protected override Task OnInitializedAsync()
    {
        List<Order> ordenes = new List<Order>();
        var person1 = new Order {ShipName="Cartón", ShipAddress="Corrugado", ShipCity="Para envio a deposito", Freight="No", OrderID=2840};
        var person2 = new Order {ShipName="Bolsa de Plástico",ShipAddress="De supermercado renovable", ShipCity="Falta recibir", Freight="Si", OrderID=1050};
        var person3 = new Order {ShipName="Metal",ShipAddress="Para deposito", ShipCity="Falta recibir", Freight="Si", OrderID=5451};
        var person4 = new Order {ShipName="Vidrio",ShipAddress="Para espejos de colores", ShipCity="Para envio a deposito", Freight="No", OrderID=1625};
        var person5 = new Order {ShipName="Botellas",ShipAddress="De shampoo y acondicionador", ShipCity="Para envio a deposito", Freight="No", OrderID=885};
        var person6 = new Order {ShipName="Tapas de Plástico",ShipAddress="De gaseosa", ShipCity="Falta recibir", Freight="Si", OrderID=1533};
 
        ordenes.Add(person1);
        ordenes.Add(person2); 
        ordenes.Add(person3);
        ordenes.Add(person4);
        ordenes.Add(person5);
        ordenes.Add(person6);

        orders = ordenes;
        _count = ordenes.Count;




        List<Pedidos> empleados = new List<Pedidos>();
        var emp1 = new Pedidos {Ped="Carton", IDEmpleado=1234, CodVenta=1200, Descripcion="cosas importantes", NumPedido=2840};
        var emp2 = new Pedidos {Ped="Carton", IDEmpleado=0025, CodVenta=1201, Descripcion="same", NumPedido=1050};
        var emp3 = new Pedidos {Ped="Carton", IDEmpleado=5524, CodVenta=1300, Descripcion="aca va el detalle", NumPedido=5451};
        var emp4 = new Pedidos {Ped="Carton", IDEmpleado=0004, CodVenta=1350, Descripcion="como", NumPedido=1625};
        var emp5 = new Pedidos {Ped="Carton", IDEmpleado=0078, CodVenta=1356, Descripcion="como", NumPedido=885};
        var emp6 = new Pedidos {Ped="Carton", IDEmpleado=7865, CodVenta=1359, Descripcion="como", NumPedido=1533};
 
        empleados.Add(emp1);
        empleados.Add(emp2); 
        empleados.Add(emp3);
        empleados.Add(emp4);
        empleados.Add(emp5);
        empleados.Add(emp6);

        pedidos = empleados;
        _count = empleados.Count;

         List<Reporte> reports = new List<Reporte>();
        var deud1 = new Reporte {ID=189, nya="Nahiara Orgoñ", dni=12345687, Telefono=4569874, Direccion="calle importante", Ciudad="Corrientes", Notas="No abono el total", TotalDebe=8135, TotalPagado=1500};
        var deud2 = new Reporte {ID=512, nya="Nemo Buscando", dni=23682387, Telefono=4569874, Direccion="wallaby 42 sidney", Ciudad="Chaco", Notas="Vencido", TotalDebe=13825, TotalPagado=1981};
        var deud3 = new Reporte {ID=160, nya="LaCeni Cienta", dni=98138187, Telefono=4569874, Direccion="niu yorc 123", Ciudad="Corrientes", Notas="Mes atrasado", TotalDebe=9385, TotalPagado=1681};
        var deud4 = new Reporte {ID=841, nya="Mateo Messi", dni=31829887, Telefono=4569874, Direccion="holiwud 456", Ciudad="Goya", Notas="Vencido", TotalDebe=81345, TotalPagado=3281};
        var deud5 = new Reporte {ID=651, nya="Elton Yon", dni=12819233, Telefono=4569874, Direccion="mi casa 789", Ciudad="Mburucuya", Notas="Vencido", TotalDebe=1284, TotalPagado=571};
        var deud6 = new Reporte {ID=100, nya="Mar Chese", dni=91358268, Telefono=4569874, Direccion="nueva yersei 985", Ciudad="Rosario", Notas="No abono el total", TotalDebe=145, TotalPagado=623};
 
        reports.Add(deud1);
        reports.Add(deud2); 
        reports.Add(deud3);
        reports.Add(deud4);
        reports.Add(deud5);
        reports.Add(deud6);

        reportes = reports;
        _count = reports.Count;
 
        return base.OnInitializedAsync();
    }

    async Task ShowInlineDialogProduccion()
    {
        var result = await DialogService.OpenAsync("Área de Producción", ds =>
        @<div>
            <p class="mb-4">Indique en que listado quiere ingresar</p>
            <div class="row">
                <div class="col">
                   <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Produccion/Stocks"))" ButtonStyle="ButtonStyle.Info" Variant="Variant.Flat" Shade="Shade.Lighter" Text="Stocks" class="me-1"/>
                   <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Produccion/Pedidos"))" ButtonStyle="ButtonStyle.Secondary" Shade="Shade.Lighter" Text="Pedidos" class="me-1" />
                    <RadzenButton ButtonStyle="ButtonStyle.Dark" Shade="Shade.Lighter" Text="Cancelar" Click="() => ds.Close(false)"  class="me-1 float-end" />
                </div>
            </div>
        </div>);
    } 
 
  async Task ShowInlineDialog()
    {
        var result = await DialogService.OpenAsync("Área de Ventas", ds =>
        @<div>
            <p class="mb-4">Indique en que listado quiere ingresar</p>
            <div class="row">
                <div class="col">
                   <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Ventas/ventasClientes"))" ButtonStyle="ButtonStyle.Info" Variant="Variant.Flat" Shade="Shade.Lighter" Text="Clientes" class="me-1"/>
                   <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Ventas/ventasProveedor"))" ButtonStyle="ButtonStyle.Secondary" Shade="Shade.Lighter" Text="Proveedores"  class="me-1" />
                    <RadzenButton ButtonStyle="ButtonStyle.Dark" Text="Cancelar" Click="() => ds.Close(false)" Shade="Shade.Lighter" class="me-1 float-end" />
                </div>
            </div>
        </div>);
    }

     private void OnClick(string text)
    {
        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Warning, Detail = text });
    }
 
}