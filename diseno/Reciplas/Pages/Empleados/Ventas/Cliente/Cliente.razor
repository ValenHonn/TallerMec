@page "/Empleados/Ventas/ventasClientes"
@using Reciplas.Models;
@inject NotificationService NotificationService 
@inherits OwningComponentBase<Usuario>
@using System.Collections.Generic;  
@using Reciplas.Repository
@inject DialogService DialogService   
@inject NavigationManager NavigationManager
@inject IClienteRepository _clientRepository 
@using Radzen
@inject TooltipService tooltipService


<PageTitle>Áreas</PageTitle>

<TituloPrincipal TextoPrincipal="Ventas" TextoSecundario="Clientes" />   <br>
<RadzenButton Class="float-end" Click="@(args => NavigationManager.NavigateTo("/Empleados/Administracion/Consultas"))"  Variant="Variant.Flat" Shade="Shade.Dark" Text="Área Administración" Icon="assignment" ButtonStyle="ButtonStyle.Light"/>
 
<RadzenButton Click=@(args => OnClick("Excel Descargado")) Variant="Variant.Flat" Shade="Shade.Dark"  Text="Excel" Icon="assignment_returned" ButtonStyle="ButtonStyle.Success"/>

<br>
<br>
<CListado TItem="Models.Cliente" Data="@clientes" PageSize="5"  Frozen="true">
       <Columns> 
        <RadzenDataGridColumn TItem=" Models.Cliente"  Property="Nombre" Title="Nombre" Width="80px" />
        <RadzenDataGridColumn TItem="Models.Cliente"  Property="Direccion" Title="Direcci&oacute;n" Width="80px"/>
        <RadzenDataGridColumn TItem=" Models.Cliente" Property="DNI" Title="DNI" Width="50px"/> 
        <RadzenDataGridColumn TItem=" Models.Cliente" Property="Telefono" Title="Telef&oacute;no" Width="50px"/> 
        <RadzenDataGridColumn TItem=" Models.Cliente" Property="FechadeNacimiento" FormatString="{0:d}" Title="Fecha de Nacimiento" Width="90px"/> 
        <RadzenDataGridColumn TItem=" Models.Cliente" TextAlign="TextAlign.Center"  Title="Pedidos" Width="65px">
            <Template Context="item">
                <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Ventas/PedidosDetalles"))" TextAlign="TextAlign.Center" Icon="list" ButtonStyle="ButtonStyle.Success" Style="margin-left: 5px" />
                <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Ventas/AgregarPedidoCliente"))" TextAlign="TextAlign.Center" Icon="add_circle_outline" Color="Color.Warning" Style="margin-left: 5px" />
                <RadzenButton Click=@RegisterEliminado  TextAlign="TextAlign.Center" Icon="delete" ButtonStyle="ButtonStyle.Danger" Style="margin-left: 5px"/>
            </Template>
        </RadzenDataGridColumn>   
            <RadzenDataGridColumn TItem=" Models.Cliente" Title="Acciones" Width="50px" Context="clientes" Filterable="false" Sortable="false">
                <Template Context="data">
                    <RadzenButton Style="margin-left: 15px" Variant="Variant.Outlined" Click="@(args => NavigationManager.NavigateTo($"/Empleados/Ventas/ClienteFormulario/{data.Id}"))" Text="Editar" />
                </Template>
            </RadzenDataGridColumn> 
        
    </Columns>  
</CListado> 
<br> 
<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem" Wrap="FlexWrap.Wrap">
   <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Ventas/NuevoClienteFormulario"))" Variant="Variant.Flat"  Text="Nuevo" Icon="add_circle_outline" ButtonStyle="ButtonStyle.Secondary" />
      <RadzenButton Style="margin-left:auto;" Click="@(args => NavigationManager.NavigateTo("/Empleados/Ventas/ventasProveedor"))" Text="Proveedores" Variant="Variant.Outlined"  Icon="compare_arrows" ButtonStyle="ButtonStyle.Primary"/>

</RadzenStack>
<br> 

@code {
    IEnumerable<Models.Cliente> clientes;   
    Models.Cliente cliente = new();   
    protected bool cargando = true;    
    bool value;
    [Parameter] public bool SoloLectura { get; set; } = true;
    [Parameter] public string Nombre {get; set;}
    [Parameter] public string Direccion {get; set;}
    [Parameter] public int DNI {get; set;} 
    [Parameter] public int Telefono {get; set;}  


    bool EmployeeIDVisible = false; 

    private void OnClick(string text)
    {
        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Detail = text });
    }
    protected async Task QuitarAdjunto(int Id)
    {
    //
    }
    private int _count;
    protected override async Task OnInitializedAsync()
    {
        var persons = await _clientRepository.GetClientes();

        clientes = persons;
        _count = persons.Count();

       await base.OnInitializedAsync();

    }


 async Task RegisterEliminado()
    {
        var result = await DialogService.OpenAsync("Está seguro de que desea eliminar el Pedido?", ds =>
        @<div>
            <div class="row">
                <div class="col">
                   <a href="/Empleados/Ventas/ventasClientes"><RadzenButton Click=@(args => OnClick("Registro Eliminado")) TextAlign="TextAlign.Center" Icon="delete" ButtonStyle="ButtonStyle.Danger" Style="margin-left: 5px" Text="Eliminar" class="me-1"/></a>
                   <RadzenButton Click="() => ds.Close(false)" TextAlign="TextAlign.Center" Icon="delete" ButtonStyle="ButtonStyle.Light" Style="margin-left: 5px" Text="Cancelar"  class="me-1 float-end" />                </div>
            </div>
        </div>);
    } 

}

