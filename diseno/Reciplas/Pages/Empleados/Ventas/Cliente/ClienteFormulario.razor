@page "/Empleados/Ventas/ClienteFormulario/{clienteId:int}"
@using Reciplas.Repository
@inject NotificationService NotificationService 
@inherits OwningComponentBase<Usuario> 
@inject NavigationManager NavigationManager
@inject IClienteRepository _clientRepository

<TituloPrincipal TextoPrincipal="Ventas" TextoSecundario="Clientes" />  
@if (cliente == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenTemplateForm Data="@cliente" Submit="@((Models.Cliente args) => { Submit(args); })">
    <RadzenRow Gap="2rem" Class="rz-p-0 rz-p-lg-4">
            <RadzenColumn Size="12" SizeMD="6">     
                <RadzenStack>
                    <RadzenFieldset Text="Modificación">
                        <RadzenStack Gap="1rem">
                            <RadzenRow AlignItems="AlignItems.Center"> 
                                <RadzenColumn Size="12" SizeMD="4">
                                    <RadzenLabel Text="Nombre y Apellido" />
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="8">
                                    <RadzenTextBox Style="width: 100%;" Name="CardNr" @bind-Value=cliente.Nombre />
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="4">
                                    <RadzenLabel Text="Dirección" />
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="8">
                                    <RadzenTextBox Style="width: 100%;" Name="CardNr" @bind-Value=@cliente.Direccion />
                                </RadzenColumn>  
                                <RadzenColumn Size="12" SizeMD="4">
                                    <RadzenLabel Text="Teléfono" />
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="8">
                                    <RadzenNumeric Style="width: 100%;" Name="CardNr" @bind-Value=@cliente.Telefono />
                                </RadzenColumn> 
                                <RadzenColumn Size="12" SizeMD="4">
                                    <RadzenLabel Text="Fecha de Nacimiento" />
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="8">
                                    <RadzenDatePicker Style="width: 100%;" Name="ExpiryDate"
                                    @bind-Value=@value ShowTime="true" DateFormat="dd/MM/yyyy" />
                                </RadzenColumn> 
                            </RadzenRow>
                        </RadzenStack>
                    </RadzenFieldset>
                </RadzenStack>
            </RadzenColumn>
        </RadzenRow>

        <br>
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem" Wrap="FlexWrap.Wrap">
                <RadzenButton ButtonType="ButtonType.Submit" Style="margin-left:15px;" Click=@(args => OnClick("Registro Modificado")) Variant="Variant.Flat" Text="Modificar" Icon="check_circle" ButtonStyle="ButtonStyle.Success" />
                <RadzenButton ButtonType="ButtonType.Button" Click=@(args => OnClick("Registro sin modificar")) Text="Volver" Icon="refresh" ButtonStyle="ButtonStyle.Light" />
            </RadzenStack> 
    </RadzenTemplateForm>
}

@code {
    bool EmployeeIDVisible = false;   

    DateTime value = DateTime.Now;

    [Parameter]
    public int clienteId { get; set; }

    Models.Cliente cliente;

    async void Submit(Models.Cliente arg)
    {
        var cliente = await _clientRepository.UpdateCliente(arg);

        NavigationManager.NavigateTo("/Empleados/Ventas/ventasClientes");
    }
    private void OnClick(string text)
    {
        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Success, Detail = text });
    }
    

    protected override async Task OnInitializedAsync()
    {
        cliente = await _clientRepository.GetCliente(clienteId);

        await base.OnInitializedAsync();
    }

}
