@page "/Empleados/Produccion/Stocks"
@using Reciplas.Models;
@inject NotificationService NotificationService 
@inherits OwningComponentBase<Usuario>
@using System.Collections.Generic;  
@inject DialogService DialogService
@inject NavigationManager NavigationManager


<RadzenButton Class="float-end" Click="@(args => NavigationManager.NavigateTo("/Empleados/Administracion/Consultas"))" Variant="Variant.Outlined" Shade="Shade.Darker" Text="Area Administración" Icon="assignment" ButtonStyle="ButtonStyle.Primary"  Width="100px"/>

<TituloPrincipal TextoPrincipal="Produccion" TextoSecundario="Stocks" />
<div class="rz-p-12">
    <RadzenColumn Size="12" SizeMD="6">
    <RadzenAccordion>
        <Items>
            <RadzenAccordionItem Text="Productos Fabricados" Icon="accessibility">
                <CListado TItem="Models.StocksFabricados" Data="@stocksfabricados" PageSize="4" AllowColumnResize="true" AllowAlternatingRows="false" Frozen="true">
       <Columns>
        <RadzenDataGridColumn TItem=" Models.StocksFabricados" Property="ID" Title="ID" Width="100px" Frozen="true" />
        <RadzenDataGridColumn TItem=" Models.StocksFabricados" Property="Producto" Title="Nombre" Width="100px" />
        <RadzenDataGridColumn TItem="Models.StocksFabricados" Property="Cantidad" Title="Cantidad" Width="100px"/> 
        <RadzenDataGridColumn TItem=" Models.StocksFabricados" Property="Descripcion" Title="Descripcion" Width="100px"/> 
        <RadzenDataGridColumn TItem=" Models.StocksFabricados" TextAlign="TextAlign.Center"  Title=" " Width="65px">
            <Template Context="item">
                <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Produccion/stocksFabricadoDetalles"))" TextAlign="TextAlign.Center" Icon="list" ButtonStyle="ButtonStyle.Success" Style="margin-left: 5px" />
                <RadzenButton Click=@(args => OnClick("Registro Eliminado"))  TextAlign="TextAlign.Center" Icon="delete" ButtonStyle="ButtonStyle.Danger" Style="margin-left: 5px"/>
            </Template>
        </RadzenDataGridColumn>
    </Columns>                 
</CListado> 
<br> 
<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem" Wrap="FlexWrap.Wrap">
    <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Produccion/NuevoStockFabricadosFormulario"))" Variant="Variant.Flat" Shade="Shade.Lighter"  Text="Nuevo" Icon="add_circle_outline" ButtonStyle="ButtonStyle.Secondary" />
    <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Produccion/StockFabricadosFormulario"))" Variant="Variant.Flat" Shade="Shade.Lighter"  Text="Modificar" Icon="check_circle" ButtonStyle="ButtonStyle.Success"  />
    <RadzenButton Click=@(args => OnClick("Registro Eliminado")) Variant="Variant.Flat" Shade="Shade.Lighter"  Text="Eliminar"  Icon="report" ButtonStyle="ButtonStyle.Danger"/>

            <RadzenButton Style="margin-left:auto" Click=@(args => OnClick("Excel Descargado")) Variant="Variant.Outlined" Text="Excel" Icon="assignment_returned" ButtonStyle="ButtonStyle.Success"/>

</RadzenStack>
              


            </RadzenAccordionItem>

            <RadzenAccordionItem Text="Materia Prima" Icon="accessibility">
                <CListado TItem="Models.StocksPrima" Data="@stocksprima" PageSize="4" AllowColumnResize="true" AllowAlternatingRows="false" Frozen="true">
       <Columns>
        <RadzenDataGridColumn TItem=" Models.StocksPrima" Property="IdArticulo" Title="ID" Width="100px" Frozen="true" />
        <RadzenDataGridColumn TItem=" Models.StocksPrima" Property="Nombre" Title="Nombre" Width="100px" />
        <RadzenDataGridColumn TItem="Models.StocksPrima" Property="Cantidad" Title="Cantidad" Width="100px"/>
        <RadzenDataGridColumn TItem=" Models.StocksPrima" Property="CantidadKgTotal" Title="Cantidad Kg Total " Width="100px"/> 
        <RadzenDataGridColumn TItem=" Models.StocksPrima" Property="Descripcion" Title="Descripcion" Width="100px"/> 
        <RadzenDataGridColumn TItem=" Models.StocksPrima" TextAlign="TextAlign.Center"  Title=" " Width="65px">
            <Template Context="item">
                <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Produccion/stocksPrimaDetalles"))" TextAlign="TextAlign.Center" Icon="list" ButtonStyle="ButtonStyle.Success" Style="margin-left: 5px" />
                <RadzenButton Click=@(args => OnClick("Registro Eliminado"))  TextAlign="TextAlign.Center" Icon="delete" ButtonStyle="ButtonStyle.Danger" Style="margin-left: 5px"/>
            </Template>
        </RadzenDataGridColumn>
    </Columns>                 
</CListado> 
<br> 
<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem" Wrap="FlexWrap.Wrap">
    <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Produccion/NuevoStockPrimaFormulario"))" Variant="Variant.Flat" Shade="Shade.Lighter"  Text="Nuevo" Icon="add_circle_outline" ButtonStyle="ButtonStyle.Secondary" />
    <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Produccion/StockPrimaFormulario"))" Variant="Variant.Flat" Shade="Shade.Lighter"  Text="Modificar" Icon="check_circle" ButtonStyle="ButtonStyle.Success"  />
    <RadzenButton Click=@(args => OnClick("Registro Eliminado")) Variant="Variant.Flat" Shade="Shade.Lighter"  Text="Eliminar"  Icon="report" ButtonStyle="ButtonStyle.Danger"/>

            <RadzenButton Style="margin-left:auto" Click=@(args => OnClick("Excel Descargado")) Variant="Variant.Outlined" Text="Excel" Icon="assignment_returned" ButtonStyle="ButtonStyle.Success"/>

</RadzenStack>
                
            </RadzenAccordionItem>
        </Items>
    </RadzenAccordion></RadzenColumn>

<br> 
    <RadzenButton Class="float-end" Click="@(args => NavigationManager.NavigateTo("/Empleados/Produccion/Pedidos"))" Variant="Variant.Outlined" Text="Pedidos" Icon="compare_arrows" ButtonStyle="ButtonStyle.Info"/>
 </div>
 @code {
    IEnumerable<Models.StocksFabricados> stocksfabricados;   



   [Parameter]
    public DateTime Fecha { get; set; }
    [Parameter]
    public string Producto { get; set; }
    [Parameter]
    public int Cantidad { get; set; }
    [Parameter]
    public int ID { get; set; }
    [Parameter]
    public string Descripcion { get; set; }
    [Parameter]
    public string ResponsableProduccion { get; set; }
    
    bool EmployeeIDVisible = false; 

     IEnumerable<Models.StocksPrima> stocksprima;   

    protected bool cargando = true;

 

    [Parameter]
    public string Proveedor { get; set; }

    [Parameter]
    public int IdArticulo { get; set; }

    [Parameter]
    public string Nombre { get; set; }

    [Parameter]
    public decimal CantidadKgPorItem { get; set; }

    [Parameter]
    public decimal CantidadKgTotal { get; set; }

    [Parameter]
    public int IdUsuarioRecepcion { get; set; }
   








    private void OnClick(string text)
    {
        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Warning, Detail = text });
    }

    protected override Task OnInitializedAsync()
    {
        List<Models.StocksFabricados> fabricados = new List<Models.StocksFabricados>();
        
        var producto1 = new Models.StocksFabricados {
            ID = 1,
            Fecha = DateTime.Now,
            Producto = "Producto 1",
            Cantidad = 50,
            Descripcion = "Descripción del producto 1",
            ResponsableProduccion = "Juan Pérez",
        };

        var producto2 = new Models.StocksFabricados {
            ID = 2,
            Fecha = DateTime.Now.AddDays(-1),
            Producto = "Producto 2",
            Cantidad = 100,
            Descripcion = "Descripción del producto 2",
            ResponsableProduccion = "María Gómez",
        };

        var producto3 = new Models.StocksFabricados {
            ID = 3,
            Fecha = DateTime.Now.AddDays(-2),
            Producto = "Producto 3",
            Cantidad = 200,
            Descripcion = "Descripción del producto 3",
            ResponsableProduccion = "Pedro López",
        };

        var producto4 = new Models.StocksFabricados {
            ID = 4,
            Fecha = DateTime.Now.AddDays(-3),
            Producto = "Producto 4",
            Cantidad = 150,
            Descripcion = "Descripción del producto 4",
            ResponsableProduccion = "Ana Rodríguez",
        };

        var producto5 = new Models.StocksFabricados {
            ID = 5,
            Fecha = DateTime.Now.AddDays(-4),
            Producto = "Producto 5",
            Cantidad = 300,
            Descripcion = "Descripción del producto 5",
            ResponsableProduccion = "Jorge Pérez",
        };

        var producto6 = new Models.StocksFabricados {
            ID = 6,
            Fecha = DateTime.Now.AddDays(-5),
            Producto = "Producto 6",
            Cantidad = 250,
            Descripcion = "Descripción del producto 6",
            ResponsableProduccion = "Carla Gómez",
        };

        fabricados.Add(producto1);
        fabricados.Add(producto2);
        fabricados.Add(producto3);
        fabricados.Add(producto4);
        fabricados.Add(producto5);
        fabricados.Add(producto6);

        stocksfabricados = fabricados;

          List<Models.StocksPrima> materiaprima = new List<Models.StocksPrima>();
        var prima1 = new Models.StocksPrima {
    Fecha = DateTime.Now,
    Proveedor = "Proveedor 1",
    IdArticulo = 1,
    Cantidad = 100,
    Descripcion = "Producto 1",
    Nombre = "Producto 1",
    CantidadKgPorItem = 2.5m,
    CantidadKgTotal = 250,
    IdUsuarioRecepcion = 1
};

var prima2 = new Models.StocksPrima {
    Fecha = DateTime.Now,
    Proveedor = "Proveedor 2",
    IdArticulo = 2,
    Cantidad = 200,
    Descripcion = "Producto 2",
    Nombre = "Producto 2",
    CantidadKgPorItem = 3m,
    CantidadKgTotal = 600,
    IdUsuarioRecepcion = 2
};

var prima3 = new Models.StocksPrima {
    Fecha = DateTime.Now,
    Proveedor = "Proveedor 3",
    IdArticulo = 3,
    Cantidad = 300,
    Descripcion = "Producto 3",
    Nombre = "Producto 3",
    CantidadKgPorItem = 1.5m,
    CantidadKgTotal = 450,
    IdUsuarioRecepcion = 3
};

var prima4 = new Models.StocksPrima {
    Fecha = DateTime.Now,
    Proveedor = "Proveedor 4",
    IdArticulo = 4,
    Cantidad = 400,
    Descripcion = "Producto 4",
    Nombre = "Producto 4",
    CantidadKgPorItem = 2m,
    CantidadKgTotal = 800,
    IdUsuarioRecepcion = 4
};

var prima5 = new Models.StocksPrima {
    Fecha = DateTime.Now,
    Proveedor = "Proveedor 5",
    IdArticulo = 5,
    Cantidad = 500,
    Descripcion = "Producto 5",
    Nombre = "Producto 5",
    CantidadKgPorItem = 1.8m,
    CantidadKgTotal = 900,
    IdUsuarioRecepcion = 5
};

var prima6 = new Models.StocksPrima {
    Fecha = DateTime.Now,
    Proveedor = "Proveedor 6",
    IdArticulo = 6,
    Cantidad = 600,
    Descripcion = "Producto 6",
    Nombre = "Producto 6",
    CantidadKgPorItem = 2.3m,
    CantidadKgTotal = 1380,
    IdUsuarioRecepcion = 6
};

var prima7 = new Models.StocksPrima {
    Fecha = DateTime.Now,
    Proveedor = "Proveedor 7",
    IdArticulo = 8,
    Cantidad = 700,
    Descripcion = "Producto 7",
    Nombre = "Producto 7",
    CantidadKgPorItem = 2.1m,
    CantidadKgTotal = 1470,
    IdUsuarioRecepcion = 7
};

        materiaprima.Add(prima1);
        materiaprima.Add(prima2);
        materiaprima.Add(prima3);
        materiaprima.Add(prima4);
        materiaprima.Add(prima5);
        materiaprima.Add(prima6);
        materiaprima.Add(prima7);

        stocksprima = materiaprima;



        return base.OnInitializedAsync();
    }

   


}


